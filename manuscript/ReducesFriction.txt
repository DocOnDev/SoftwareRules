{#reduces_friction}
# Reduces Friction.

{blurb, icon: bullhorn}
An excellent team addresses things in the system that make their work more difficult. Is there a process they can document and repeat? They automate it. Humans do creative work. Computers do repetitive work. These teams eliminate or automate approvals and gates. They de-couple, de-clutter, and de-bureaucratize. Anything that causes friction is game for overhaul, if not eradication.
{/blurb}

{icon: quote-left}
B> ### The most powerful tool we have as developers is automation.
B>
B> #### -- Scott Hanselman

### Maybe this section is Reduces Friction...

THINGS TO (possibly) ANSWER IN THIS SECTION
* What gets automated?
  * Automated Tests
  * Automated builds
  * Automated traceability
  * Automated deployments
  * Automated approvals
  * Automated provisioning
  * Automated breakers
  * Automated Chaos
*

Favors Automation is good, but it focuses on one aspect of flow/improvement for the team. Starting to think "Reduces Friction" is better.

When we reduce friction, we are actively eliminating the things that cause drag. Automation plays a role, of course, but this can also be reducing general bureaucracy, changing procedures without automation, reducing dependencies, etc. This is kind of like continuously improves, but "continuous improvement" feels almost cliche at this point.

# Stories
1.
