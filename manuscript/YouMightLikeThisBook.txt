# You Might Like This Book if...

You lead one or more software teams. You've been through a couple agile transformations. You got your certification. You built your release train. You sprinted, pointed, continuously-integrated, burned-down and stood-up.

And yet, you feel as though something is missing. Most of the changes ended up being superficial. You put in a lot of process, tools, and ceremony but the software still breaks and the customer still complains. You feel like maybe you've been putting veneer on cardboard, lipstick on pigs, paper over holes, or band-aids on bullet wounds.

You're kinda fed up with this agile bullshit.

Me too. I'm fed up with the bullshit.

Now - Just to be clear, I have absolutely no problem with agile. None. Nada. Zip. Zero. Nil.

Agile good. Bullshit bad.

I picked up XP in early 2000. Only a few years later, I got my scrum certification from Mr. Schwaber hisself. I was there when Ron Jeffries and Chet Hendrickson put together the first Scrum Certified Developer course and I even co-taught the course with them. I was present for the first ever Certified Scrum Product Owner class, designed and delivered by my friend, Jeff Patton. I've done instructional videos for Robert Martin, paired with Ward Cunningham, collaborated with Alistair Coburn, and spent quality time with Jon Kern and James Grenning.

Sure. I'm name dropping. I know. I just really want you to understand that I've been deeply connected to the agile scene for a long time.

Like I said, I have absolutely no problem with agile, but I do have a problem with all the bullshit.

I know an awful lot of you were sold the warm gooey chocolate fudge lava cake of agile, but then got served a stale chocolate donut.

Big consultancies that run waterfall projects in order to install the agile. Multi-million dollar transformations that are really just some light-weight training and a mandate. Agile coaches that are neither agile nor coaches looking down their noses whilst dispensing terrible advice and blaming you for not getting it.

You and me - we know about the bullshit and we're tired of it.

I won't bullshit you.

This book isn't about agile. At least not directly.

Aside from this section of the book, I'm not going to mention agile. I'm not going to offer platitudes about values or principles or mindsets. I'm not going to introduce you to my new DesArcDevTestSecOps that fixes all that's wrong with agile by cramming another role into DevOps. I'm not going to tell you about the one true way to scale, spread, or move the needle on agile.

Instead, I'm going to tell you about some success and some failure I've seen in my 30+ years delivering software solutions. I'm going to share with you some key behaviors I believe excellent teams exhibit. Behaviors that help a team deliver better quality software sooner, get rapid feedback, and adjust as they go. Behaviors that are aligned with agility.

I'm going to talk to you straight. I'm going to be a little snarky. And I'm going to offer you ways to think about how you might encourage these behaviors on your teams.

Sound good?

Then let's go.
