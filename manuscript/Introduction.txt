# Introduction

In some ways, I've been writing this book since 1989. But, if pressed, I'd say this book began in 2019.

In March of 2019, I was consulting at a large automotive company and had been assigned to help out a new initiative. We had the audacious goal of reducing the cycle time for a car from order to delivery by 65%. We began by pulling together people from all over the company; sales, order entry, supplier management, scheduling, sequencing, manufacturing, distribution, and IT were all represented.

We ran workshops for several days where we looked at every step of the flow from the moment a dealer places a wholesale order to the moment the vehicle arrives on the lot. There were a lot of ah-hah moments where one department explained how difficult their process was because of some missing or wrong data or because of some extended delay outside of their scope. In many cases, other departments were able to alleviate the pain by providing better data or by adjusting their own process in order to remove a bottleneck. Through all of it, we saw potential improvements in cycle time - some of them fairly significant, but we knew, even if all of these improvements worked as hoped, we were still far from our goal.

Then Angie spoke up. Angie ran a small but critical crew who was adept at tweaking systems and processes and figuring out how to make adjustments to schedules as inexpensively as possible. Angie was whip smart and outspoken with short spiky hair died jet black with cobalt blue tips. She rubbed some folks the wrong way, especially those that preferred things to stay as they always were, but Angie had a proven track record of improvements and insightful ideas. She was standing in front of a massive whiteboard upon which we'd drawn a model of the flow. She pointed at a rather complicated piece of the flow and asked, "Can anyone tell me why we do it this way?" There was a long pause and and a lot of blank stares, so she continued, "This has never made sense to me. We get high-level numbers from the dealers, telling us how many of each model they want." She pointed further down and to the right, making a large circle with her extended index finger. "Then, we go through this whole mess of calculations to tell them what packages and features they are each going to get." She turned back to the group, her index finger still extended, as if she were scolding them all. "We don't really give them much choice. And...", she said with a long pause for effect, "Then the games begin." She turned back to the board and followed the diagram along as she briefly explained each step. "We get all prepared to make all these cars, figuring out exactly what's going to happen in the supply chains, what car will be built when and on what line and all the other work that needs to happen.", she swept her hand to the right, gesturing toward the rest of the steps in the flow.

Tom, a seasoned veteran of the automotive industry and the most tenured member of the department, interrupted her. "We've been over this before, Angie. We need the dealer wholesale commitment to get a sense of what they intend. That is necessary for us to generate recommendations and try to balance dealer needs against our own needs, our market projections, and constraints in the supply chain." Tall and stocky with a very tight buzz cut, Tom looks like he might be former military. He certainly seems comfortable in a world of hierarchy where there are those that give orders and those that take orders. In this moment, Tom found himself an order giver in a room full of order takers. And as such, this was a waste of his time. "This is the way it is, Angie. We need to focus on areas where we can drive efficiencies. Where can we speed up a step? And I don't want us to forget about cost reductions. Where can we reduce costs?"

Angie raised a finger, "Hear me out, Tom. I didn't get to the games. Now that we've made our 90-day plan, dealers start modifying the orders. Denver wants more all wheel drives. Florida wants fewer. Customer orders, which take priority, start coming in and wholesale orders start getting canceled. We can see them gaming the system; writing up customer orders that then go on the lot because they 'lost the sale due to manufacturing delays'. There is a ton of re-work that has to happen. We're adjusting on the fly, expediting materials, sometimes taking down production lines for a change-over. Cycle times go up and so do costs. We need wholesale orders 90 days in advance because all of this churn causes delays. Because of the delays, we get more churn. It's a vicious cycle."

Drew, Tom's right-hand man, and probably the most informed on how both the business and IT processes work, has been walking over to where Angie is standing, his hand on his chin as he stares at the board. In his early forties with a newly minted MBA, Drew's salt and pepper hair falls over his forehead, sweeping the top of his black-rimmed glasses. He started with the company as an intern when we was 22 and has worked his way up. Most of his tenure has been under Tom, where Drew's optimism and creativity have been more tolerated than appreciated, but he's never let it get him down. "What are you suggesting, Angie?", he asks, "What do you think needs to happen?" Drew was visibly excited. He's pretty sure of where Angie is going and he knows it is currently not possible, but maybe, just maybe, it could be made possible. This new agile approach he's seen on some teams has given Drew some renewed hope.

Angie pointed back to the beginning of the flow. "We need to get a real commitment from the dealers. We need to let them choose the cars they want. Not just the models, but the packages and options. We need to work with them to create the schedule. We expect them to just accept the cars we allocate to them. We keep trying to get better at guessing over longer and longer periods of time. Let's guess less and shorten the timeline. Seriously, it could make a huge difference."

Tom furrowed his brow. He'd been down this road before. "Look, Dealers are always going to game the system. It's just what they do. We do our best to work with them, but they don't care about supply chains and delays. They don't want to hear about constraints or even what we think the market is going to do."

"Hah.", interjected Angie, "Maybe if we weren't shoving cars they can't sell down their throats, they'd care more about our constraints."

"Okay, okay.", said Drew, "Step back folks. Angie is on to something here. If we can get a real commitment, we can reduce the re-work. Not only that, but I think we can actually cut entire steps out of the flow and move some other things to later in the flow where re-work won't impact them any more. We just might be able to get this down to under our target. Julia, what do you think? Can we get a commitment system together?"

Julia, a senior systems architect, has been with the company just under two years. She worked for a start-up in Boston that wrote forecasting software for complex manufacturing. They were acquired for their algorithms, but then the software was shelved because integration with existing systems would have taken too long. "Ummm...", Julia hesitated, "I mean, sure. Anything is possible."

"C'mon, Julia. Tell me what you think.", coaxed Drew, one eyebrow raised above the rim of his glasses. He smiled a little smile. "I know you know this stuff. Give it to us."

A distance runner, Julia was short and thin with an abundance of energy. Her long blonde hair was regularly in a pony tail that bobbed two and fro even when she was seated at her desk as her legs were always moving. Julia got systems. She got software. She got people. But she didn't get big companies. She didn't understand how you could put all these perfectly capable people together and end up with nothing but mediocrity. People here didn't like to hear the truth. They didn't want to hear that the reason they couldn't integrate the forecasting software was because the company was about 10 years behind in technology and 20 years behind in software development disciplines. She tended to keep her opinions to herself these days. But when somebody asked...

"Sure, we can get a commitment system together. But we have to be ready to make real changes. We're in love with the recommendations engine. We spent more on it than the scheduling system that got shelved. And the team that writes it is untouchable. Well, that system is going to need to get gutted. It takes 36 hours to complete a cycle and cannot generate anything less than a national recommendation set. We need to be able to go regional, if not local, if not dealer by dealer. And we've got to replace the messaging bus. We're getting dropped packages all over the place. We're going to increase package traffic by an order of magnitude during wholesale. We have to update the whole thing - rethink the whole strategy."

"Here we go again!", Tom bellowed. "Always with the replacements. Always with the technical debt! Always with the refactoring. You cannot expect us to cow-tow to the whims of the developers. We have real demands. This needs to get done. And it needs to get done with what we have. I sure as hell am not going to executive council to get approval to shut everything down in order to spend money chasing the latest technology trend or fixing something you should have done correctly in the first place! I do NOT want to hear it!"

Julia looked down and away. She looked as though she was ashamed for having said the wrong thing. But then she looked back up, eyes narrowed and lips pursed, she met Tom's eyes. "That's the attitude that got us here in the first place."

"Excuse me, young lady?", Tom looked both stunned and outraged.

"Hey Tom,", said Drew, "Can I talk to you a minute?" He put his arm around Tom's shoulder, walked him across the hall into a private conference room, and shut the door.

The room was buzzing with chatter when a few minutes later, Tom and Drew  returned to the meeting.

Drew stepped to the front of the room, raised a hand, and said, "Tom has agreed to give us some time to noodle on these ideas. Thank you, Tom. We appreciate it."

Tom, gathered his laptop and coffee mug. Red-faced and tight gripped, he left the room. You could hear a pin drop.

"Okay, folks.", Drew said, "Let's take 15 and then reconvene to talk through Ruth's idea and Julia's concerns. Lot's to do. Lot's to do."

By the following week, the crew had come up with a plan and, to Tom's chagrin, executive council gave it a provisional approval, pending a staffing strategy. Under this new plan, instead of working in 90 day cycles, dealers would provide a 30-day model forecast and within 24 hours, they would receive recommendations based on the 30 day data. Dealers would have a few days to make adjustments to the recommendations before finalizing their wholesale order commitment. They could make just about any change they wanted, so long as their combination of orders stayed within certain constraints. They'd be informed of the key constraints, such as a limited number of sunroofs or drive trains, ahead of time. And the wholesale software would enforce the constraints, giving dealers clear feedback and guidance.

Sales and Marketing identified a vehicle we could start with. It was a low volume, low dollar vehicle. There were only three packages, no individual options, and no material or supplier constraints. It was the easiest vehicle possible to launch our first version of the system with. But the vehicle was set to be discontinued the following model year, so we had only two wholesale cycles left - one in 90 days and one in 180 days. We needed to build a solution in 90 days.

We needed a team - immediately. We needed software developers from existing wholesale, forecasting, recommendations, and dealer experience. Not only were there a great number of updates to existing systems, there was no solution for allowing dealers to adjust commitments based on recommendations. That was going to be all new.

The next morning, I arrived at the office early to find Drew and Julia looking through a roster of teams and projects.

"Morning, Doc.", said Drew, raising his coffee before taking a short sip. He waived toward Julia's screen. "We have a couple of teams that have been working on a special project in manufacturing. We can have three of their developers for the next few months starting next week. Three of them plus one developer each from wholesale, forecasting, recommendations, and dealer experience and we have a team of seven."

"Eight.", said Julia. "You have a team of eight. I am in."

"Whoah!", said Drew, sloshing coffee all over the floor as he jumped to his feet. "For serious?", he asked, holding his coffee cup in hands of prayer.

"For serious.", Julia said. "This is the most interesting thing I've seen since I arrived here. You couldn't keep me away."

Drew sat back down and nudged Julia with his elbow. "So awesome! Yes!!"

Drew and Julia both looked at me, still standing in the doorway.

"Yeah, so, what do you think about this team?", I asked

"They're not going to know anything about the problem or our systems.", said Julia.

"Well,", I replied, "That might be a good thing. Fresh eyes and fresh ideas."

"Maybe.", Julia said, drawing the word out for almost three seconds, "But how do we know they're any good?"

"What does good look like?", asked Drew. "I mean, how would we know a good team if we saw it?"

"Well", said Julia, "we can look at their flow metrics. And their static analysis. I guess we could look at security scans and application logs as well. How many outages have they had? How many escaped defects? Mean time to recovery?"

Drew shrugged. "We're not going to have any of those things. This is a brand new team on a brand new project. No flow or static. Nada. Ideas and an empty code editor. How will we know we've got the right folks? How will we know they're doing well?"

I walked over to the white board, Drew and Julia tracked me as I moved, turning in their chairs as they tracked. I picked up a dry erase marker and removed the cap.

"We should measure all those things. Julia's right. And you're right, too, Drew. We won't have those things right away. But excellent teams exhibit certain, shall we say, characteristics."

I wrote "EXCELLENCE CHARACTERISTICS" on the board and underlined it. "There are things we can observe outside of formal measurement. I believe these characteristics are present on every high performing software team."

I wrote each characteristic on the board as I described it.

*Knows the Problem*

"Every good team knows the problems they are solving. They know what they're doing and why. They aren't building something to specification. They are solving a real problem. The problem they have right now."

*Works Together*

"They work together. Not cooperation, but collaboration. This isn't about each of them doing their part and then stitching it together later. They work together as a unit."

*Creates Simple Things*

"Now, I know that teams are writing complex systems. But what underlies a good complex system, is simple components. Simple, reliable pieces that can be put together into a solution. They don't architect grand future-proof solutions. They keep it simple and they let elegance emerge."

*Works in Small Steps*

"When they build complex solutions out of simple components, they do it in small steps. They focus on the next simplest thing that can be done. They don't solve problems they don't yet have - see characteristic number one. They are obsessed with creating value, offering options, and learning."

*Is Meticulous about Composition*

"Every good team is deliberate about code composition. They pay attention to whether or not too much behavior is clumped into one place. They refactor mercilessly. They eschew complexity. They don't optimize for easy right now, they optimize for easy in the future."

*Validates Before, During, and After*

"They don't just write tests. They design the tests first. They are validating constantly - with every little edit, with every check-in, with every release."

*Releases Ridiculously Often*

"An excellent team is doing continuous integration and is releasing as often as they possibly can. How often? Ridiculously often. They're pushing the boundary. Business says once per month is sufficient - they release once per week. Ridiculous."

*Reduces Friction*

"An excellent team addresses things in the system that make their work more difficult. Is there a process they can document and repeat? They automate it. Humans do creative work. Computers do repetitive work. These teams eliminate or automate approvals and gates. They de-couple, de-clutter, and de-bureaucratize. Anything that causes friction is game for overhaul, if not eradication."

* * *

The story of the characteristics is fictionalized. It is based on real life events, but I took some liberties and most of the names were changed. I really did write the list down and post it on a wall at an automotive company and we really were doing the work I described.

The characteristics are neither mutually exclusive nor collectively exhaustive. This is simply a set of characteristics that I believe to be common among excellent product and software teams. There are certainly other characteristics exhibited by excellent teams. There are quite likely other characteristics, which I do not include here, that are common among excellent product and software teams.
